import tkinter as tk
from tkinter import messagebox

class CashFlowMinimizerApp:
    def _init_(self, root):
        self.root = root
        self.root.title("🌸 Cash Flow Minimizer 🌸")
        self.root.configure(bg="#fce4ec")  # Soft pink background

        # Input for number of people
        self.n_label = tk.Label(root, text="👥 Number of People:", bg="#fce4ec", fg="#d81b60", font=("Comic Sans MS", 12, "bold"))
        self.n_label.grid(row=0, column=0, padx=10, pady=10, sticky="w")
        
        self.n_entry = tk.Entry(root, font=("Comic Sans MS", 10))
        self.n_entry.grid(row=0, column=1, padx=10, pady=10)
        
        # Display Transactions Button
        self.transactions = {}
        self.display_button = tk.Button(root, text="➕ Enter Transactions", command=self.add_transaction, bg="#f8bbd0", fg="black", font=("Comic Sans MS", 10, "bold"), relief="groove", borderwidth=2)
        self.display_button.grid(row=1, column=0, columnspan=2, padx=10, pady=10, ipadx=5, ipady=5)
        
        # Calculate and Minimize Cash Flow Button
        self.calculate_button = tk.Button(root, text="💸 Minimize Cash Flow", command=self.calculate_cash_flow, bg="#f8bbd0", fg="black", font=("Comic Sans MS", 10, "bold"), relief="groove", borderwidth=2)
        self.calculate_button.grid(row=2, column=0, columnspan=2, padx=10, pady=10, ipadx=5, ipady=5)

        # Output Area
        self.output_text = tk.Text(root, height=15, width=50, font=("Comic Sans MS", 10), bg="#fce4ec", fg="#d81b60", relief="flat", borderwidth=0)
        self.output_text.grid(row=3, column=0, columnspan=2, padx=10, pady=10)

    def add_transaction(self):
        try:
            n = int(self.n_entry.get())
            if n < 2:
                messagebox.showerror("Input Error", "❗ Number of people must be at least 2.")
                return
            # Popup to enter transactions
            self.transaction_window = tk.Toplevel(self.root)
            self.transaction_window.title("Add Transactions")
            self.transaction_window.configure(bg="#f8bbd0")

            tk.Label(self.transaction_window, text="📤 From Person:", bg="#f8bbd0", fg="black", font=("Comic Sans MS", 10)).grid(row=0, column=0, padx=10, pady=5)
            self.from_entry = tk.Entry(self.transaction_window, font=("Comic Sans MS", 10))
            self.from_entry.grid(row=0, column=1, padx=10, pady=5)
            
            tk.Label(self.transaction_window, text="📥 To Person:", bg="#f8bbd0", fg="black", font=("Comic Sans MS", 10)).grid(row=1, column=0, padx=10, pady=5)
            self.to_entry = tk.Entry(self.transaction_window, font=("Comic Sans MS", 10))
            self.to_entry.grid(row=1, column=1, padx=10, pady=5)
            
            tk.Label(self.transaction_window, text="💰 Amount:", bg="#f8bbd0", fg="black", font=("Comic Sans MS", 10)).grid(row=2, column=0, padx=10, pady=5)
            self.amount_entry = tk.Entry(self.transaction_window, font=("Comic Sans MS", 10))
            self.amount_entry.grid(row=2, column=1, padx=10, pady=5)
            
            add_button = tk.Button(self.transaction_window, text="Add 💖", command=self.save_transaction, bg="#f48fb1", fg="black", font=("Comic Sans MS", 10, "bold"), relief="groove", borderwidth=2)
            add_button.grid(row=3, column=0, columnspan=2, padx=10, pady=10, ipadx=5, ipady=5)
        
        except ValueError:
            messagebox.showerror("Input Error", "❗ Please enter a valid integer for the number of people.")
            
    def save_transaction(self):
        try:
            from_person = int(self.from_entry.get())
            to_person = int(self.to_entry.get())
            amount = int(self.amount_entry.get())
            
            if from_person == to_person:
                messagebox.showerror("Transaction Error", "🚫 Sender and receiver cannot be the same.")
                return

            if (from_person, to_person) in self.transactions:
                self.transactions[(from_person, to_person)] += amount
            else:
                self.transactions[(from_person, to_person)] = amount
                
            self.from_entry.delete(0, tk.END)
            self.to_entry.delete(0, tk.END)
            self.amount_entry.delete(0, tk.END)
            
            messagebox.showinfo("Transaction Added", f"💸 Transaction: Person {from_person} pays {amount} to Person {to_person}")
        
        except ValueError:
            messagebox.showerror("Input Error", "❗ Please enter valid numbers for the transaction.")

    def calculate_cash_flow(self):
        output = "✨ Minimized Cash Flow ✨\n"
        for (from_person, to_person), amount in self.transactions.items():
            output += f"💸 Person {from_person} pays {amount} to Person {to_person}\n"
        self.output_text.insert(tk.END, output)

# Create Tkinter window
root = tk.Tk()
app = CashFlowMinimizerApp(root)
root.mainloop()